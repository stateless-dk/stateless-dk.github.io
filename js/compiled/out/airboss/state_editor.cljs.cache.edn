{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name airboss.state-editor, :imports {}, :requires {ut airboss.utils, goog.dom goog.dom, reagent.core reagent.core, date goog.date, r reagent.core, dom-helper goog.dom, airboss.utils airboss.utils, cljs.reader cljs.reader, reader cljs.reader, goog.date goog.date}, :cljs.spec/speced-vars [], :uses nil, :defs {get-editing-mode {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 40, :column 8, :end-line 40, :end-column 24, :private true, :arglists (quote ([value]))}, :private true, :name airboss.state-editor/get-editing-mode, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 24, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, render-input-field {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 61, :column 7, :end-line 61, :end-column 25, :arglists (quote ([value on-value-changed on-cancel]))}, :name airboss.state-editor/render-input-field, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 25, :method-params ([value on-value-changed on-cancel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value on-value-changed on-cancel]))}, error-field {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 44, :column 8, :end-line 44, :end-column 19, :private true, :arglists (quote ([error]))}, :private true, :name airboss.state-editor/error-field, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 19, :method-params ([error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([error]))}, throw-exception {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 29, :column 7, :end-line 29, :end-column 22, :arglists (quote ([s expected-type]))}, :name airboss.state-editor/throw-exception, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 22, :method-params ([s expected-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s expected-type]))}, edit-modes {:name airboss.state-editor/edit-modes, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 15, :column 1, :end-line 15, :end-column 16, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 15, :column 6, :end-line 15, :end-column 16}, :tag cljs.core/IVector}, input-field-id {:name airboss.state-editor/input-field-id, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 11, :column 1, :end-line 11, :end-column 20, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 11, :column 6, :end-line 11, :end-column 20}, :tag string}, map->Edit-mode {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 13, :column 12, :end-line 13, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__30402]))}, :name airboss.state-editor/map->Edit-mode, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 21, :method-params ([G__30402]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30402]))}, ->Edit-mode {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 13, :column 12, :end-line 13, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([name type? parser-fn]))}, :name airboss.state-editor/->Edit-mode, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 21, :method-params ([name type? parser-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name type? parser-fn]))}, render {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 112, :column 7, :end-line 112, :end-column 13, :arglists (quote ([_ _ _]))}, :name airboss.state-editor/render, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 13, :method-params ([_ _ _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ _ _]))}, parse-and-validate {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :line 32, :column 8, :end-line 32, :end-column 26, :private true, :arglists (quote ([s {:keys [name type? parser-fn]}]))}, :private true, :name airboss.state-editor/parse-and-validate, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 26, :method-params ([s p__30408]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s {:keys [name type? parser-fn]}]))}, Edit-mode {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name airboss.state-editor/Edit-mode, :file "/Users/jonasgreen/workspace/stateless/src/airboss/state_editor.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 13, :record true, :end-line 13, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core, reader cljs.reader, cljs.reader cljs.reader}, :cljs.analyzer/constants {:seen #{type? :line-height :min-width :edit-mode :align-items :text-overflow :box-shadow :parser-fn :ESC :color :text-align :min-height :white :else :white-space :font-size :top :name :value :ellipsis :component-did-mount :width :background parser-fn :type :flex :normal :center :style name :div :z-index :reagent-render :padding-left :DOWN :hidden :id :padding :overflow-x :outline :display :position :error :type? :input :fixed :on-change :border :on-key-down :ENTER :UP :none :relative :height :left :text}, :order [:name :type? :parser-fn name type? parser-fn :left :top :width :div :style :line-height :text-overflow :box-shadow :color :white-space :background :z-index :padding :overflow-x :position :ellipsis :white :normal :hidden :fixed :value :edit-mode :error :display :align-items :flex :center :relative :input :id :type :on-change :on-key-down :text :DOWN :UP :ENTER :else :ESC :padding-left :border :min-width :min-height :font-size :outline :none :height :text-align :reagent-render :component-did-mount]}, :doc nil}