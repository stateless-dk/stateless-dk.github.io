{:rename-macros {}, :renames {}, :externs {Object {}, RegExp {}, console {warn {}}, Error {}, window {}, document {body {appendChild {}}}}, :use-macros {reaction reagent.ratom}, :excludes #{}, :name airboss.state-view, :imports {}, :requires {airboss.state-editor airboss.state-editor, ut airboss.utils, goog.dom goog.dom, reagent.ratom reagent.ratom, reagent.core reagent.core, r reagent.core, dom-helper goog.dom, r-atom reagent.ratom, airboss.utils airboss.utils, w clojure.walk, events goog.events, s clojure.string, clojure.string clojure.string, clojure.walk clojure.walk, goog.events goog.events, editor airboss.state-editor}, :cljs.spec/speced-vars [], :uses nil, :defs {update-position {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 160, :column 8, :end-line 160, :end-column 23, :private true, :arglists (quote ([state-atom position]))}, :private true, :name airboss.state-view/update-position, :variadic false, :file "src/airboss/state_view.cljs", :end-column 23, :method-params ([state-atom position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state-atom position]))}, get-data {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 146, :column 8, :end-line 146, :end-column 16, :private true, :arglists (quote ([path data]))}, :private true, :name airboss.state-view/get-data, :variadic false, :file "src/airboss/state_view.cljs", :end-column 16, :method-params ([path data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path data]))}, info-panel {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 442, :column 8, :end-line 442, :end-column 18, :private true, :arglists (quote ([last-focus-atom small]))}, :private true, :name airboss.state-view/info-panel, :variadic false, :file "src/airboss/state_view.cljs", :end-column 18, :method-params ([last-focus-atom small]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 442, :end-line 442, :max-fixed-arity 2, :fn-var true, :arglists (quote ([last-focus-atom small]))}, close-row {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 126, :column 8, :end-line 126, :end-column 17, :private true, :arglists (quote ([state-atom path]))}, :private true, :name airboss.state-view/close-row, :variadic false, :file "src/airboss/state_view.cljs", :end-column 17, :method-params ([state-atom path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state-atom path]))}, build-row-models {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 301, :column 8, :end-line 301, :end-column 24, :private true, :arglists (quote ([state-atom data]))}, :private true, :name airboss.state-view/build-row-models, :variadic false, :file "src/airboss/state_view.cljs", :end-column 24, :method-params ([state-atom data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state-atom data]))}, default-hide-key {:name airboss.state-view/default-hide-key, :file "src/airboss/state_view.cljs", :line 78, :column 1, :end-line 78, :end-column 22, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 78, :column 6, :end-line 78, :end-column 22}, :tag cljs.core/Keyword}, build-paths-from-filter {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 273, :column 8, :end-line 273, :end-column 31, :private true, :arglists (quote ([value filter-text] [k value filter-text])), :doc "Recursively (bottom-up) builds a vector of paths to all values that fits filter.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([value filter-text] [k value filter-text]), :arglists ([value filter-text] [k value filter-text]), :arglists-meta (nil nil)}}, :private true, :name airboss.state-view/build-paths-from-filter, :variadic false, :file "src/airboss/state_view.cljs", :end-column 31, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([value filter-text] [k value filter-text]), :arglists ([value filter-text] [k value filter-text]), :arglists-meta (nil nil)}, :method-params ([value filter-text] [k value filter-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 3, :fn-var true, :arglists ([value filter-text] [k value filter-text]), :doc "Recursively (bottom-up) builds a vector of paths to all values that fits filter."}, render-rows-panel {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 457, :column 8, :end-line 457, :end-column 25, :private true, :arglists (quote ([row-models dispatcher {:keys [small], :as opts}]))}, :private true, :name airboss.state-view/render-rows-panel, :variadic false, :file "src/airboss/state_view.cljs", :end-column 25, :method-params ([row-models dispatcher p__30476]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 457, :end-line 457, :max-fixed-arity 3, :fn-var true, :arglists (quote ([row-models dispatcher {:keys [small], :as opts}]))}, search-field-id {:name airboss.state-view/search-field-id, :file "src/airboss/state_view.cljs", :line 14, :column 1, :end-line 14, :end-column 21, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 14, :column 6, :end-line 14, :end-column 21}, :tag string}, depth-style {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 395, :column 7, :end-line 395, :end-column 18, :arglists (quote ([path]))}, :name airboss.state-view/depth-style, :variadic false, :file "src/airboss/state_view.cljs", :end-column 18, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 395, :end-line 395, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, data-wash {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 463, :column 8, :end-line 463, :end-column 17, :private true, :arglists (quote ([local-storage]))}, :private true, :name airboss.state-view/data-wash, :variadic false, :file "src/airboss/state_view.cljs", :end-column 17, :method-params ([local-storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 463, :end-line 463, :max-fixed-arity 1, :fn-var true, :arglists (quote ([local-storage]))}, atom? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 106, :column 8, :end-line 106, :end-column 13, :private true, :arglists (quote ([x]))}, :private true, :name airboss.state-view/atom?, :variadic false, :file "src/airboss/state_view.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, panel-id {:name airboss.state-view/panel-id, :file "src/airboss/state_view.cljs", :line 16, :column 1, :end-line 16, :end-column 14, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 16, :column 6, :end-line 16, :end-column 14}, :tag string}, load {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 550, :column 7, :end-line 550, :end-column 11, :arglists (quote ([data-atom opts]))}, :name airboss.state-view/load, :variadic false, :file "src/airboss/state_view.cljs", :end-column 11, :method-params ([data-atom opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 550, :end-line 550, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data-atom opts]))}, build-paths {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 259, :column 8, :end-line 259, :end-column 19, :private true, :arglists (quote ([state-atom value] [state-atom path value all-paths])), :doc "Recursively (top-down) builds a vector of paths to all values. Stops when value is not an 'open container'", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([state-atom value] [state-atom path value all-paths]), :arglists ([state-atom value] [state-atom path value all-paths]), :arglists-meta (nil nil)}}, :private true, :name airboss.state-view/build-paths, :variadic false, :file "src/airboss/state_view.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([state-atom value] [state-atom path value all-paths]), :arglists ([state-atom value] [state-atom path value all-paths]), :arglists-meta (nil nil)}, :method-params ([state-atom value] [state-atom path value all-paths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 4, :fn-var true, :arglists ([state-atom value] [state-atom path value all-paths]), :doc "Recursively (top-down) builds a vector of paths to all values. Stops when value is not an 'open container'"}, editing? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 121, :column 8, :end-line 121, :end-column 16, :private true, :arglists (quote ([state-atom path]))}, :private true, :name airboss.state-view/editing?, :variadic false, :file "src/airboss/state_view.cljs", :end-column 16, :method-params ([state-atom path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state-atom path]))}, render-value-empty-container {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 338, :column 8, :end-line 338, :end-column 36, :private true, :arglists (quote ([{:keys [value]}]))}, :private true, :name airboss.state-view/render-value-empty-container, :variadic false, :file "src/airboss/state_view.cljs", :end-column 36, :method-params ([p__30450]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [value]}]))}, render-value-container-with-children {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 347, :column 8, :end-line 347, :end-column 44, :private true, :arglists (quote ([{:keys [value is-atom]}]))}, :private true, :name airboss.state-view/render-value-container-with-children, :variadic false, :file "src/airboss/state_view.cljs", :end-column 44, :method-params ([p__30453]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [value is-atom]}]))}, style-row {:name airboss.state-view/style-row, :file "src/airboss/state_view.cljs", :line 70, :column 1, :end-line 70, :end-column 15, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 70, :column 6, :end-line 70, :end-column 15}, :tag cljs.core/IMap}, render-row {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 406, :column 8, :end-line 406, :end-column 18, :private true, :arglists (quote ([_ _ _]))}, :private true, :name airboss.state-view/render-row, :variadic false, :file "src/airboss/state_view.cljs", :end-column 18, :method-params ([_ _ _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ _ _]))}, app-key-listeners {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 490, :column 8, :end-line 490, :end-column 25, :private true, :arglists (quote ([dispatcher e]))}, :private true, :name airboss.state-view/app-key-listeners, :variadic false, :file "src/airboss/state_view.cljs", :end-column 25, :method-params ([dispatcher e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dispatcher e]))}, render-value-container {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 357, :column 8, :end-line 357, :end-column 30, :private true, :arglists (quote ([{:keys [open value], :as m}]))}, :private true, :name airboss.state-view/render-value-container, :variadic false, :file "src/airboss/state_view.cljs", :end-column 30, :method-params ([p__30456]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 357, :end-line 357, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [open value], :as m}]))}, search-field-style {:name airboss.state-view/search-field-style, :file "src/airboss/state_view.cljs", :line 60, :column 1, :end-line 60, :end-column 24, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 60, :column 6, :end-line 60, :end-column 24}, :tag cljs.core/IMap}, render-value {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 371, :column 8, :end-line 371, :end-column 20, :private true, :arglists (quote ([{:keys [value], :as m} dispatcher]))}, :private true, :name airboss.state-view/render-value, :variadic false, :file "src/airboss/state_view.cljs", :end-column 20, :method-params ([p__30462 dispatcher]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [value], :as m} dispatcher]))}, render-value-leaf {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 364, :column 8, :end-line 364, :end-column 25, :private true, :arglists (quote ([{:keys [value edit is-atom], :as m} dispatcher]))}, :private true, :name airboss.state-view/render-value-leaf, :variadic false, :file "src/airboss/state_view.cljs", :end-column 25, :method-params ([p__30459 dispatcher]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [value edit is-atom], :as m} dispatcher]))}, index-of-model {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 156, :column 7, :end-line 156, :end-column 21, :arglists (quote ([models m]))}, :name airboss.state-view/index-of-model, :variadic false, :file "src/airboss/state_view.cljs", :end-column 21, :method-params ([models m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([models m]))}, nt {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 19, :column 7, :end-line 19, :end-column 9, :arglists (quote ([n t]))}, :name airboss.state-view/nt, :variadic false, :file "src/airboss/state_view.cljs", :end-column 9, :method-params ([n t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n t]))}, default-show-key {:name airboss.state-view/default-show-key, :file "src/airboss/state_view.cljs", :line 79, :column 1, :end-line 79, :end-column 22, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 79, :column 6, :end-line 79, :end-column 22}, :tag cljs.core/Keyword}, default-setup {:name airboss.state-view/default-setup, :file "src/airboss/state_view.cljs", :line 82, :column 1, :end-line 82, :end-column 19, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 82, :column 6, :end-line 82, :end-column 19}, :tag cljs.core/IMap}, contains-string {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 152, :column 8, :end-line 152, :end-column 23, :private true, :arglists (quote ([filter-text s]))}, :private true, :name airboss.state-view/contains-string, :variadic false, :file "src/airboss/state_view.cljs", :end-column 23, :method-params ([filter-text s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([filter-text s]))}, render-key {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 381, :column 8, :end-line 381, :end-column 18, :private true, :arglists (quote ([key-value small]))}, :private true, :name airboss.state-view/render-key, :variadic false, :file "src/airboss/state_view.cljs", :end-column 18, :method-params ([key-value small]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key-value small]))}, types {:name airboss.state-view/types, :file "src/airboss/state_view.cljs", :line 22, :column 1, :end-line 22, :end-column 11, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 22, :column 6, :end-line 22, :end-column 11}, :tag cljs.core/IVector}, build-row-model {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 292, :column 8, :end-line 292, :end-column 23, :private true, :arglists (quote ([edit open path value]))}, :private true, :name airboss.state-view/build-row-model, :variadic false, :file "src/airboss/state_view.cljs", :end-column 23, :method-params ([edit open path value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 292, :end-line 292, :max-fixed-arity 4, :fn-var true, :arglists (quote ([edit open path value]))}, dom-id-model {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 102, :column 8, :end-line 102, :end-column 20, :private true, :arglists (quote ([m]))}, :private true, :name airboss.state-view/dom-id-model, :variadic false, :file "src/airboss/state_view.cljs", :end-column 20, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, render {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 498, :column 7, :end-line 498, :end-column 13, :arglists (quote ([data-atom _])), :doc "Creates a panel that shows the data in the given data-atom. The panel should only be used as a singleton on\n  application level - if multiple instances are shown - it will fail"}, :name airboss.state-view/render, :variadic false, :file "src/airboss/state_view.cljs", :end-column 13, :method-params ([data-atom _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 498, :end-line 498, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data-atom _])), :doc "Creates a panel that shows the data in the given data-atom. The panel should only be used as a singleton on\n  application level - if multiple instances are shown - it will fail"}, ui-toggler {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 538, :column 8, :end-line 538, :end-column 18, :private true, :arglists (quote ([_ {:keys [key-code-show key-code-hide]}]))}, :private true, :name airboss.state-view/ui-toggler, :variadic false, :file "src/airboss/state_view.cljs", :end-column 18, :method-params ([_ p__30481]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 538, :end-line 538, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ {:keys [key-code-show key-code-hide]}]))}, dom-id-path {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 99, :column 8, :end-line 99, :end-column 19, :private true, :arglists (quote ([p]))}, :private true, :name airboss.state-view/dom-id-path, :variadic false, :file "src/airboss/state_view.cljs", :end-column 19, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, get-keys {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 112, :column 8, :end-line 112, :end-column 16, :private true, :arglists (quote ([value]))}, :private true, :name airboss.state-view/get-keys, :variadic false, :file "src/airboss/state_view.cljs", :end-column 16, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, raw-data {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 139, :column 8, :end-line 139, :end-column 16, :private true, :arglists (quote ([data]))}, :private true, :name airboss.state-view/raw-data, :variadic false, :file "src/airboss/state_view.cljs", :end-column 16, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, postition-styles-panel {:name airboss.state-view/postition-styles-panel, :file "src/airboss/state_view.cljs", :line 44, :column 1, :end-line 44, :end-column 28, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 44, :column 6, :end-line 44, :end-column 28}, :tag cljs.core/IMap}, open? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 118, :column 8, :end-line 118, :end-column 13, :private true, :arglists (quote ([state-atom path]))}, :private true, :name airboss.state-view/open?, :variadic false, :file "src/airboss/state_view.cljs", :end-column 13, :method-params ([state-atom path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state-atom path]))}, style-panel {:name airboss.state-view/style-panel, :file "src/airboss/state_view.cljs", :line 51, :column 1, :end-line 51, :end-column 17, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 51, :column 6, :end-line 51, :end-column 17}, :tag cljs.core/IMap}, focus {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 131, :column 8, :end-line 131, :end-column 13, :private true, :arglists (quote ([dom-id]))}, :private true, :name airboss.state-view/focus, :variadic false, :file "src/airboss/state_view.cljs", :end-column 13, :method-params ([dom-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dom-id]))}, mk-dispatcher {:name airboss.state-view/mk-dispatcher, :file "src/airboss/state_view.cljs", :line 178, :column 1, :end-line 178, :end-column 19, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 178, :column 6, :end-line 178, :end-column 19}, :tag function}, prepare-data-for-local-storage {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 477, :column 8, :end-line 477, :end-column 38, :private true, :arglists (quote ([data]))}, :private true, :name airboss.state-view/prepare-data-for-local-storage, :variadic false, :file "src/airboss/state_view.cljs", :end-column 38, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 477, :end-line 477, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, container? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 109, :column 8, :end-line 109, :end-column 18, :private true, :arglists (quote ([x]))}, :private true, :name airboss.state-view/container?, :variadic false, :file "src/airboss/state_view.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, search-field {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 310, :column 8, :end-line 310, :end-column 20, :private true, :arglists (quote ([value _]))}, :private true, :name airboss.state-view/search-field, :variadic false, :file "src/airboss/state_view.cljs", :end-column 20, :method-params ([value _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value _]))}, focus-row {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 136, :column 8, :end-line 136, :end-column 17, :private true, :arglists (quote ([rm]))}, :private true, :name airboss.state-view/focus-row, :variadic false, :file "src/airboss/state_view.cljs", :end-column 17, :method-params ([rm]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rm]))}, local-storage-id {:name airboss.state-view/local-storage-id, :file "src/airboss/state_view.cljs", :line 15, :column 1, :end-line 15, :end-column 22, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/state_view.cljs", :line 15, :column 6, :end-line 15, :end-column 22}, :tag string}}, :cljs.spec/registry-ref [], :require-macros {reagent.ratom reagent.ratom, r reagent.core, reagent.core reagent.core, r-atom reagent.ratom}, :cljs.analyzer/constants {:seen #{:line-height :min-width :path :open :tab-index :change-value :down :align-items :text-overflow :box-shadow :last-focus :max-height :ESC :key-width :color :min-height :key :move-left :bottom :white :F :else :white-space :font-size :top :default :on-focus :key-code-hide :overflow :RIGHT :name :value :ellipsis :edit :component-did-mount :flex-grow :width :background :key-code-show :on-search :raw-value :flex :LEFT :onBlur :editing-row :close :absolute :search :F12 :move-down :up :size :column :center :small :style :start-edit :div :move-right :onKeyUp :tab-width :fullscreen :z-index :reagent-render :move-up :padding-left :is-atom :DOWN :hidden :opacity :id :padding :app :justify-content :open-rows :component-will-unmount :outline :right :focus :space-between :display :position :type? :lightgrey :input :onKeyDown :version :onChange :border :stop-edit :ENTER :auto :nowrap :UP :none :onFocus :filter-text :flex-direction :height :border-bottom :row :left :rm :span}, :order [:name :type? :right :left :up :down :fullscreen :top :height :width :bottom :z-index :display :flex-direction :position :background :color :box-shadow :flex :column :absolute :min-height :font-size :padding-left :outline :border :border-bottom :none :align-items :line-height :padding :center :ESC :F12 :key-width :key-code-hide :key-code-show :editing-row :size :tab-width :open-rows :version :filter-text :path :else :row :move-down :app :move-right :on-focus :stop-edit :search :start-edit :open :change-value :move-up :close :on-search :move-left :last-focus :rm :value :edit :raw-value :is-atom :focus :input :id :style :onChange :onFocus :onBlur :onKeyDown :F :DOWN :ENTER :default :div :span :opacity :lightgrey :small :tab-index :white :LEFT :RIGHT :UP :min-width :white-space :overflow :text-overflow :nowrap :hidden :ellipsis :max-height :justify-content :space-between :flex-grow :auto :key :reagent-render :component-did-mount :component-will-unmount :onKeyUp]}, :doc nil}