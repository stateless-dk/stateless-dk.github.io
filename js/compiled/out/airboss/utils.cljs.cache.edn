{:rename-macros {}, :renames {}, :externs {document {styleSheets {length {}}, createElement {}, body {appendChild {}}}, console {info {}}, window {localStorage {setItem {}, getItem {}, removeItem {}}, innerHeight {}, innerWidth {}}, JSON {stringify {}, parse {}}, Error {}}, :use-macros {}, :excludes #{}, :name airboss.utils, :imports {EventType goog.events.EventType, KeyCodes goog.events.KeyCodes}, :requires {EventType goog.events.EventType, KeyCodes goog.events.KeyCodes}, :cljs.spec/speced-vars [], :uses nil, :defs {scroll-into-view {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 94, :column 7, :end-line 94, :end-column 23, :arglists (quote ([item-node panel-node])), :doc "Makes sure an item is visible in a scroll panel.\n\n  item-node - the dom node that should be visible.\n  panel-node - the surrounding scroll panel dom node."}, :name airboss.utils/scroll-into-view, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 23, :method-params ([item-node panel-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([item-node panel-node])), :doc "Makes sure an item is visible in a scroll panel.\n\n  item-node - the dom node that should be visible.\n  panel-node - the surrounding scroll panel dom node."}, above? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 83, :column 7, :end-line 83, :end-column 13, :arglists (quote ([p1 p2])), :doc "returns true if postion p1's top is above postition p2's top."}, :name airboss.utils/above?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 13, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2])), :doc "returns true if postion p1's top is above postition p2's top."}, ctrl-modifier? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 119, :column 7, :end-line 119, :end-column 21, :arglists (quote ([event]))}, :name airboss.utils/ctrl-modifier?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, local-storage {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 42, :column 7, :end-line 42, :end-column 20, :arglists (quote ([id]))}, :name airboss.utils/local-storage, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 20, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, absolut-position {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([node])), :doc "Returns a map containing the aboslut left, top, width, height of\n  the dom-element."}, :name airboss.utils/absolut-position, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 23, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node])), :doc "Returns a map containing the aboslut left, top, width, height of\n  the dom-element."}, offset-position {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 76, :column 7, :end-line 76, :end-column 22, :arglists (quote ([node])), :doc "Returns a map containing the offset left, top, width, height of\n  the dom-element."}, :name airboss.utils/offset-position, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 22, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node])), :doc "Returns a map containing the offset left, top, width, height of\n  the dom-element."}, key-codes {:name airboss.utils/key-codes, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 6, :column 1, :end-line 6, :end-column 19, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 6, :column 10, :end-line 6, :end-column 19}, :tag any}, get-style-sheet {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([s-name]))}, :name airboss.utils/get-style-sheet, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 22, :method-params ([s-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s-name]))}, mk-stylesheet {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([unique-name]))}, :name airboss.utils/mk-stylesheet, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 20, :method-params ([unique-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unique-name]))}, cyclic-next {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 152, :column 7, :end-line 152, :end-column 18, :arglists (quote ([item coll]))}, :name airboss.utils/cyclic-next, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 18, :method-params ([item coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([item coll]))}, modifier? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 128, :column 7, :end-line 128, :end-column 16, :arglists (quote ([event]))}, :name airboss.utils/modifier?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 16, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, key? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 113, :column 7, :end-line 113, :end-column 11, :arglists (quote ([k event]))}, :name airboss.utils/key?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 11, :method-params ([k event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k event]))}, below? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 88, :column 7, :end-line 88, :end-column 13, :arglists (quote ([p1 p2])), :doc "returns true if postion p1's 'bottom' is below postition p2's 'bottom'."}, :name airboss.utils/below?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 13, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2])), :doc "returns true if postion p1's 'bottom' is below postition p2's 'bottom'."}, cyclic-previous {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 146, :column 7, :end-line 146, :end-column 22, :arglists (quote ([item coll]))}, :name airboss.utils/cyclic-previous, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 22, :method-params ([item coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([item coll]))}, alt-modifier? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 122, :column 7, :end-line 122, :end-column 20, :arglists (quote ([event]))}, :name airboss.utils/alt-modifier?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 20, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, meta-modifier? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 125, :column 7, :end-line 125, :end-column 21, :arglists (quote ([event]))}, :name airboss.utils/meta-modifier?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, index-of {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 134, :column 7, :end-line 134, :end-column 15, :arglists (quote ([item coll] [item coll condition-fn] [index item coll condition-fn])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([item coll] [item coll condition-fn] [index item coll condition-fn]), :arglists ([item coll] [item coll condition-fn] [index item coll condition-fn]), :arglists-meta (nil nil nil)}}, :name airboss.utils/index-of, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([item coll] [item coll condition-fn] [index item coll condition-fn]), :arglists ([item coll] [item coll condition-fn] [index item coll condition-fn]), :arglists-meta (nil nil nil)}, :method-params ([item coll] [item coll condition-fn] [index item coll condition-fn]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 4, :fn-var true, :arglists ([item coll] [item coll condition-fn] [index item coll condition-fn])}, shift-modifier? {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 116, :column 7, :end-line 116, :end-column 22, :arglists (quote ([event]))}, :name airboss.utils/shift-modifier?, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 22, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, local-storage-remove {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 48, :column 7, :end-line 48, :end-column 27, :arglists (quote ([id]))}, :name airboss.utils/local-storage-remove, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 27, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, local-storage-write {:protocol-inline nil, :meta {:file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :line 36, :column 7, :end-line 36, :end-column 26, :arglists (quote ([id data]))}, :name airboss.utils/local-storage-write, :variadic false, :file "/Users/jonasgreen/workspace/stateless/src/airboss/utils.cljs", :end-column 26, :method-params ([id data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id data]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:bottom :else :top :width :window-height :right :keywordize-keys :height :window-width :left}, :order [:keywordize-keys :left :top :right :bottom :width :height :window-width :window-height :else]}, :doc nil}